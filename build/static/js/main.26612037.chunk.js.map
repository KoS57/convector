{"version":3,"sources":["component/Information/Navig/Navig.module.css","component/Information/Currencies/Currencies.module.css","component/Header/Header.module.css","component/Information/Valuta/Valuta.module.css","component/Information/Informat.module.css","component/Information/Exchange/Exchange.module.css","component/img/rose.png","component/Header/Header.jsx","component/Information/Navig/Navig.jsx","component/Information/Informat.jsx","component/Information/Exchange/Exchange.jsx","api/api.js","redux/number-reducer.js","component/Information/Exchange/ExchangeContainer.jsx","component/Information/Valuta/Valuta.jsx","component/Information/Currencies/Currencies.jsx","component/Information/Currencies/CurrenciesContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","Header","className","st","maincontainer","container","src","rose","alt","foto","text","Navig","props","mainContainer","menu__body","menu__list","to","menu__link","activeClassName","selected","Informat","blok","Exchange","form","formContainer","bodyContainer","id","name","result","map","n","value","txt","onClick","valut","change","filter","v","onCurrentCurrency","rate","onCurentValut","choice","onChangeCurrency","onChangeValut","type","cols","rows","onChange","event","body","target","onupdateText","newMessText","resultCurrency","buttonchoice","val","currentCurrency","length","changeCurrency","toFixed","onResultCurrency","conv","instace","axios","baseURL","userAPI","get","then","response","data","ADD_NUMBER","UPDATE_NUMBER","CURRENT_CURRENCY","CHANGE_CURRENCY","RESULT_CURRENCY","initialState","getCourse","dispatch","numbersReducer","state","action","stateCopy","newMess","connect","resultConver","getNewCourse","onupdateCourse","newresult","actionCourse","actionCurrentCurrency","actionChangeCurrency","actionResultCurrency","useEffect","Valute","valute","Currencies","currenciesElement","person","cc","c","Valuta","headContainer","nameValuta","nameUa","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","applyMiddleware","thunkMiddlewear","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26612037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Navig_mainContainer__3Mb-t\",\"container\":\"Navig_container__2edY0\",\"menu__list\":\"Navig_menu__list__5vOVu\",\"menu__link\":\"Navig_menu__link__1Od6h\",\"selected\":\"Navig_selected__VDlIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Currencies_form__1XXYY\",\"formContainer\":\"Currencies_formContainer__3pZjd\",\"headContainer\":\"Currencies_headContainer__2rIpq\",\"nameValuta\":\"Currencies_nameValuta__1s4JH\",\"nameUa\":\"Currencies_nameUa__231Y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maincontainer\":\"Header_maincontainer__3Y4zM\",\"container\":\"Header_container__3_GsX\",\"foto\":\"Header_foto__25hNW\",\"text\":\"Header_text__2519b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Valuta_formContainer__1i7xc\",\"bodyContainer\":\"Valuta_bodyContainer__1uvMk\",\"choice\":\"Valuta_choice__2Csfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Informat_container__9_eSP\",\"blok\":\"Informat_blok__1R5QI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Exchange_container__wshT6\",\"form\":\"Exchange_form__2Af5G\",\"formContainer\":\"Exchange_formContainer__27jih\",\"bodyContainer\":\"Exchange_bodyContainer__3t0XD\",\"choice\":\"Exchange_choice__RUi18\",\"buttonchoice\":\"Exchange_buttonchoice__33f5z\",\"selected\":\"Exchange_selected__Fidx7\",\"text\":\"Exchange_text__3PM3R\"};","export default __webpack_public_path__ + \"static/media/rose.dd1d12a0.png\";","import React from 'react'\r\nimport rose from '../img/rose.png'\r\nimport st from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={st.maincontainer}>\r\n            <div className={st.container}>\r\n                <div>\r\n                    <img src={rose} alt=\"\" className={st.foto} />\r\n                </div>\r\n                <div className={st.text}>\r\n                    <h1>SK converter</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport st from './Navig.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Navig = (props) => {\r\n    return (\r\n        <div className={st.mainContainer}>\r\n            <div className={st.container}>\r\n                <nav className={st.menu__body}>\r\n                    <ul className={st.menu__list}>\r\n                        <li><NavLink to=\"/exchange\" className={st.menu__link} activeClassName={st.selected}>Exchange</NavLink ></li>\r\n                        <li><NavLink to=\"/currencies\" className={st.menu__link} activeClassName={st.selected}>Сurrencies</NavLink ></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navig\r\n\r\n\r\n","import React from 'react'\r\nimport st from './Informat.module.css'\r\nimport Navig from './Navig/Navig'\r\n\r\n\r\nconst Informat = (props) => {\r\n    return (\r\n        <div className={st.container}>\r\n            <div className={st.blok}>\r\n                <Navig />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Informat","import React from 'react'\r\nimport st from './Exchange.module.css'\r\n\r\n\r\n\r\nconst Exchange = (props) => {\r\n\r\n\r\n    let updateText = (event) => {\r\n        let body = event.target.value\r\n        props.onupdateText(body)\r\n    }\r\n    let onCurentValut = (valut) => {\r\n        let change = props.result.filter(v => v.txt === valut)\r\n        props.onCurrentCurrency(change[0].rate)\r\n    }\r\n\r\n    let onChangeValut = (valut) => {\r\n        let change = props.result.filter(v => v.txt === valut)\r\n        props.onChangeCurrency(change[0].rate)\r\n    }\r\n\r\n    const conv = () => {\r\n        let a\r\n        let b\r\n\r\n        if (props.currentCurrency.length == 0) {\r\n            a = props.result[0].rate\r\n        }\r\n        else {\r\n            a = props.currentCurrency;\r\n        }\r\n        if (props.changeCurrency.length == 0) {\r\n            b = props.result[0].rate\r\n        } else {\r\n            b = props.changeCurrency;\r\n        }\r\n        let c = props.newMessText\r\n        let f = (a / b) * c;\r\n        let val = (f.toFixed(1))\r\n        return props.onResultCurrency(val);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={st.container}>\r\n            <div className={st.form}>\r\n                <div className={st.formContainer}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div >\r\n                            <div>\r\n                                <form className={st.selected}>\r\n                                    <select id=\"country\" name=\"country\">\r\n                                        {props.result.map(n => {\r\n                                            return <option value={n.txt} onClick={() => { onCurentValut(n.txt) }}>\r\n                                                {n.txt}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className={st.choice}>\r\n                            <div>\r\n                                <form className={st.selected}>\r\n                                    <select id=\"country\" name=\"country\">\r\n                                        {props.result.map(n => {\r\n                                            return <option value={n.txt} onClick={() => { onChangeValut(n.txt) }}> {n.txt}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={st.formContainer}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div >\r\n                            <div>\r\n                                <div className={st.text}>\r\n                                    <textarea type=\"number\" name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={updateText} value={props.newMessText} ></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={st.choice}>\r\n                            <div>\r\n                                <div className={st.text}>\r\n                                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={props.resultCurrency}></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={st.buttonchoice}>\r\n                    <div className={st.bodyContainer}>\r\n                        <div className={st.selected}>\r\n                            <button onClick={() => { conv() }}>\r\n                                Exchange\r\n\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchange","import *as axios from 'axios'\r\n\r\nconst instace = axios.create({\r\n    baseURL: 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchangenew?json',\r\n\r\n})\r\n\r\nexport const userAPI = {\r\n    getCourse() {\r\n        return instace.get()\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n\r\n}\r\n","import { userAPI } from '../api/api'\r\n\r\n\r\nconst ADD_NUMBER = 'ADD_NUMBER'\r\nconst UPDATE_NUMBER = 'UPDATE_NUMBER'\r\nconst UPDATE_COURSE = 'UPDATE_COURSE'\r\nconst CURRENT_CURRENCY='CURRENT_CURRENCY'\r\nconst CHANGE_CURRENCY='CHANGE_CURRENCY'\r\nconst RESULT_CURRENCY='RESULT_CURRENCY'\r\n\r\n\r\nlet initialState = {\r\n    result: [],\r\n    currentCurrency:[],    //текущая валюта\r\n    changeCurrency:[],    //какую валюту хотят получить\r\n    resultCurrency:[],     //результат конвертации\r\n    newMessText: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst numbersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NUMBER: return {\r\n            ...state, result: action.result\r\n        }\r\n        case UPDATE_NUMBER: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.newMessText = action.newMess\r\n            return stateCopy\r\n        }\r\n        case CURRENT_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.currentCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        case CHANGE_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.changeCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        case RESULT_CURRENCY: {\r\n            let stateCopy = { ...state }\r\n            stateCopy.resultCurrency = action.result\r\n            return stateCopy\r\n        }\r\n        default: return state \r\n    }\r\n}\r\n\r\nexport let actionAddNewCourse = (rates) => {\r\n    return {\r\n        type: ADD_NUMBER,\r\n        result: rates\r\n    }\r\n}\r\n\r\nexport let actionUpdateMessText = (text) => {\r\n    return {\r\n        type: UPDATE_NUMBER,\r\n        newMess: text\r\n    }\r\n}\r\n\r\nexport let actionCourse = (newresult) => {\r\n    return {\r\n        type: UPDATE_COURSE,\r\n        result: newresult\r\n    }\r\n}\r\n\r\nexport let actionCurrentCurrency = (result) => {\r\n    return {\r\n        type: CURRENT_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\nexport let actionChangeCurrency = (result) => {\r\n    return {\r\n        type: CHANGE_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\nexport let actionResultCurrency = (result) => {\r\n    return {\r\n        type: RESULT_CURRENCY,\r\n        result: result\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getCourse = () => {\r\n    return (dispatch) => {\r\n        userAPI.getCourse()\r\n            .then(data => {\r\n                dispatch(actionAddNewCourse(data))\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default numbersReducer","import React, { useEffect } from 'react'\r\nimport Exchange from './Exchange'\r\nimport { getCourse, actionUpdateMessText, actionCourse, actionCurrentCurrency, actionChangeCurrency, actionResultCurrency } from '../../../redux/number-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst ExchangeContainer = (props) => {\r\n    useEffect(() => {\r\n        props.getNewCourse()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Exchange\r\n                result={props.result}\r\n                currentCurrency={props.currentCurrency}\r\n                changeCurrency={props.changeCurrency}\r\n                newMessText={props.newMessText}\r\n                resultCurrency={props.resultCurrency}\r\n                newMessText={props.newMessText}\r\n                getNewCourse={props.getNewCourse}\r\n                onupdateText={props.onupdateText}\r\n                onupdateCourse={props.onupdateCourse}\r\n                onCurrentCurrency={props.onCurrentCurrency}\r\n                onChangeCurrency={props.onChangeCurrency}\r\n                onResultCurrency={props.onResultCurrency}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.resultConver.result,\r\n        currentCurrency: state.resultConver.currentCurrency,\r\n        changeCurrency: state.resultConver.changeCurrency,\r\n        newMessText: state.resultConver.newMessText,\r\n        resultCurrency: state.resultConver.resultCurrency,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        getNewCourse: () => {\r\n            dispatch(getCourse())\r\n        },\r\n        onupdateText: (body) => {\r\n            dispatch(actionUpdateMessText(body))\r\n        },\r\n        onupdateCourse: (newresult) => {\r\n            dispatch(actionCourse(newresult))\r\n        },\r\n        onCurrentCurrency: (result) => {\r\n            dispatch(actionCurrentCurrency(result))\r\n        },\r\n        onChangeCurrency: (result) => {\r\n            dispatch(actionChangeCurrency(result))\r\n        },\r\n        onResultCurrency: (result) => {\r\n            dispatch(actionResultCurrency(result))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangeContainer)\r\n\r\n","import React from 'react'\r\nimport st from './Valuta.module.css'\r\n\r\n\r\n\r\n\r\nconst Valute = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={st.formContainer}>\r\n                <div className={st.bodyContainer}>\r\n                    <div className={st.choice}> \r\n                        {props.name}\r\n                    </div>\r\n                    <div className={st.choice}> \r\n                        {props.valute}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Valute\r\n","import React from 'react'\r\nimport st from './Currencies.module.css'\r\nimport Valuta from '../Valuta/Valuta'\r\n\r\n\r\n\r\n\r\n\r\nconst Currencies = (props) => {\r\n\r\n    const valut = props.result.filter(person => {\r\n        if (person.cc === \"USD\") {\r\n            return true\r\n        } else if (person.cc === \"EUR\") {\r\n            return true\r\n        } else if (person.cc === \"RUB\") {\r\n            return true\r\n        } else if (person.cc === \"PLN\") {\r\n            return true\r\n        }\r\n\r\n    }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n    const currenciesElement = valut.map((c) => {\r\n        return <Valuta valute={c.rate} name={c.cc} />\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={st.container}>\r\n                <div className={st.form}>\r\n                    <div className={st.formContainer}>\r\n                        <div className={st.headContainer}>\r\n                            <div>\r\n                                <div className={st.nameValuta}>Valuta</div>\r\n                            </div>\r\n\r\n                            <div className={st.nameUa}>UA</div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            {currenciesElement}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Currencies\r\n","import React, { useEffect } from 'react'\r\nimport { getCourse } from '../../../redux/number-reducer'\r\nimport { connect } from 'react-redux'\r\nimport Currencies from './Currencies'\r\n\r\n\r\nconst CurrenciesContainer = (props) => {\r\n    useEffect(() => {\r\n        props.getNewCourse()\r\n    }, []);\r\n\r\n    return (\r\n        <Currencies\r\n            result={props.result}\r\n            getNewCourse={props.getNewCourse}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.resultConver.result,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        getNewCourse: () => {\r\n            dispatch(getCourse())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrenciesContainer)","\nimport './App.css';\nimport Header from './component/Header/Header'\nimport Informat from './component/Information/Informat'\nimport { Route } from 'react-router-dom'\nimport ExchangeContainer from './component/Information/Exchange/ExchangeContainer';\nimport CurrenciesContainer from './component/Information/Currencies/CurrenciesContainer'\n\n\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Informat />\n      <Route path='/exchange' render={() => <ExchangeContainer />} onClick={() => { props.getNewCourse() }} />\n      <Route path='/currencies' render={() => <CurrenciesContainer />} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport resultConver from './number-reducer'\r\nimport thunkMiddlewear from 'redux-thunk'\r\n\r\n\r\n\r\nlet reducer = combineReducers({\r\n   resultConver,\r\n   // \r\n})\r\n\r\nlet store = createStore(reducer,applyMiddleware(thunkMiddlewear))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n\n\nconst rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store} >\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root'));\n}\nrerenderEntireTree();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}